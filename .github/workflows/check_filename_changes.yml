name: Check Filename Changes

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  check-filename-change:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch PR file changes
        id: pr-files
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const files = await github.paginate(github.rest.pulls.listFiles, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number,
              per_page: 100
            });
            return JSON.stringify(files.map(f => ({
              filename: f.filename,
              status: f.status,
              previous_filename: f.previous_filename || null
            })));

      - name: Read protected files list
        id: read-protected
        run: |
          # Read each line, trim whitespace, ignore empty and comment lines
          grep -v '^\s*$' .github/protected_files.txt | grep -v '^\s*#' > protected_list.txt

      - name: Check for filename changes (including delete+add pattern)
        env:
          PR_FILES: ${{ steps.pr-files.outputs.result }}
        run: |
          set -e

          # Read patterns from protected_list.txt into an array
          mapfile -t patterns < protected_list.txt

          # Read PR files
          echo "$PR_FILES" > pr_files.json

          # Parse for deleted and added files
          deleted_files=($(jq -r '.[] | select(.status == "removed") | .filename' pr_files.json))
          added_files=($(jq -r '.[] | select(.status == "added") | .filename' pr_files.json))
          renamed_files=($(jq -r '.[] | select(.status == "renamed") | .previous_filename + ":" + .filename' pr_files.json))

          has_name_change=0

          function matches_pattern() {
            local file="$1"
            for pat in "${patterns[@]}"; do
              # Remove leading/trailing whitespace
              pat="${pat#"${pat%%[![:space:]]*}"}"
              pat="${pat%"${pat##*[![:space:]]}"}"
              if [[ "$file" == $pat ]]; then
                return 0
              fi
              if [[ "$pat" == *"*"* && "$file" == $pat ]]; then
                return 0
              fi
            done
            return 1
          }

          for rename in "${renamed_files[@]}"; do
            old="${rename%%:*}"
            new="${rename##*:}"
            if matches_pattern "$old" || matches_pattern "$new"; then
              echo "Detected filename change: $old -> $new"
              has_name_change=1
            fi
          done

          for del in "${deleted_files[@]}"; do
            if matches_pattern "$del"; then
              echo "Detected protected file deleted: $del"
              has_name_change=1
            fi
          done

          for add in "${added_files[@]}"; do
            if matches_pattern "$add"; then
              echo "Detected protected file added: $add"
              has_name_change=1
            fi
          done

          if [[ "$has_name_change" == "1" ]]; then
            echo "Filename change detected in protected files. Failing check."
            exit 1
          else
            echo "No filename change detected in protected files."
          fi
